# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0df14e98-cebe-4a46-a439-ed634f1a975f";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-00523356-e95f-4a89-86e5-a0687c0df2ee".device = "/dev/disk/by-uuid/00523356-e95f-4a89-86e5-a0687c0df2ee";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/874E-8BAC";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/hdd/DATA" =
    { device = "/dev/disk/by-label/DATA";
      fsType = "ntfs";
      options = [
        "users"
        "nofail"
        "uid=alan"
        "gid=users"
      ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/96b74e74-3f69-4b07-aa4a-347e7ebcd8cb"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-6ae97991d02d.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-c1d389d66ac6.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.ztppivq3mg.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
